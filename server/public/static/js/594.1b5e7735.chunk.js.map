{"version":3,"file":"static/js/594.1b5e7735.chunk.js","mappings":"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","sources":["components/Form/Form.jsx","components/common/Button/Button.jsx","routes/NewTask/NewTask.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./form.scss\";\r\nimport Button from \"../common/Button/Button\";\r\nimport moment from \"moment\";\r\n\r\nconst Form = ({ mode, createTask, updateTask, task, className }) => {\r\n  if (mode === \"create\") {\r\n    return (\r\n      <div className={`${className} form`}>\r\n        <form className=\"form-container\" method=\"post\" onSubmit={createTask}>\r\n          <h1 className=\"form-title\">New Task</h1>\r\n          <div className=\"form-fields\">\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"task\">Task</label>\r\n              <input type=\"text\" name=\"task\" id=\"task\" required />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"description\">Desc</label>\r\n              <textarea name=\"description\" id=\"description\" />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"due-date\">Due Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                name=\"due-date\"\r\n                id=\"due-date\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"priority\">Priority</label>\r\n              <select\r\n                id=\"priority\"\r\n                defaultValue={\"high\"}\r\n                name=\"priority\"\r\n                required\r\n              >\r\n                <option value=\"high\">High</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"low\">Low</option>\r\n              </select>\r\n            </div>\r\n            <Button variant=\"primary\" type=\"submit\" height=\"30px\">\r\n              Create Task\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else if (mode === \"update\" && Object.keys(task).length > 0) {\r\n    return (\r\n      <div className={`${className} form`}>\r\n        <form className=\"form-container\" method=\"post\" onSubmit={updateTask}>\r\n          <h1 className=\"form-title\">Update Task</h1>\r\n          <div className=\"form-fields\">\r\n            <div className=\"form-field\">\r\n              <label>Task ID</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"taskid\"\r\n                defaultValue={task._id}\r\n                disabled\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"task\">Task</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"task\"\r\n                id=\"task\"\r\n                defaultValue={task.task}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"description\">Desc</label>\r\n              <textarea\r\n                name=\"description\"\r\n                id=\"description\"\r\n                defaultValue={task.desc}\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"due-date\">Due Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                name=\"due-date\"\r\n                id=\"due-date\"\r\n                // defaultValue=\"2018-06-12T19:30\"\r\n                defaultValue={moment(task.dueDate).format(\"yyyy-MM-DDTHH:mm\")}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"priority\">Priority</label>\r\n              <select\r\n                id=\"priority\"\r\n                defaultValue={task.priority}\r\n                name=\"priority\"\r\n                required\r\n              >\r\n                <option value=\"high\">High</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"low\">Low</option>\r\n              </select>\r\n            </div>\r\n            <Button variant=\"primary\" type=\"submit\" height=\"30px\">\r\n              Update Task\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport \"./button.scss\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Button = ({ variant, type, height, width, children, func, link, className}) => {\r\n  let navigate = useNavigate();\r\n  return (\r\n    <button\r\n      type={type || \"button\"}\r\n      className={`button button-${variant} ${className}`}\r\n      style={{ height: height, width: width || \"100%\" }}\r\n      onClick={link? ()=>navigate(link) : func}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport \"./newtask.scss\";\r\nimport Navbar from \"../../components/common/Navbar/Navbar\";\r\nimport Form from \"../../components/Form/Form\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport PopUp from \"../../components/common/PopUp/PopUp\";\r\nimport useModals from \"../../hooks/useModals\";\r\nimport Tasks from \"../../components/Tasks/Tasks\"\r\n\r\nconst NewTask = () => {\r\n  const { isOpen, closeModal, modalContent, content } = useModals();\r\n  const { tasks, createTask, archiveTask, updateTask, isLoading } = useTasks({\r\n    modalContent,\r\n  });\r\n\r\n  return (\r\n    <section className=\"newtask-section\">\r\n      <div className=\"newtask-container\">\r\n        <Navbar />\r\n\r\n        <Form mode=\"create\" createTask={createTask} className=\"newtask-form\" />\r\n\r\n        {tasks.length !== 0 && (\r\n          <div className=\"newtask-recent\">Recently created</div>\r\n        )}\r\n\r\n        <Tasks\r\n          tasks={tasks}\r\n          archiveTask={archiveTask}\r\n          updateTask={updateTask}\r\n          className=\"newtask-tasks\"\r\n          isLoading={isLoading}\r\n        />\r\n\r\n        <PopUp open={isOpen} close={closeModal} image={content.image}>\r\n          {content.message}\r\n        </PopUp>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default NewTask;\r\n"],"names":["mode","createTask","updateTask","task","className","method","onSubmit","htmlFor","type","name","id","required","defaultValue","value","Button","variant","height","Object","keys","length","_id","disabled","desc","moment","dueDate","format","priority","width","children","func","link","navigate","useNavigate","style","onClick","useModals","isOpen","closeModal","modalContent","content","useTasks","tasks","archiveTask","isLoading","Navbar","Form","Tasks","PopUp","open","close","image","message"],"sourceRoot":""}