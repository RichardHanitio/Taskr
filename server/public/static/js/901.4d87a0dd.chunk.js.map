{"version":3,"file":"static/js/901.4d87a0dd.chunk.js","mappings":"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","sources":["components/common/PopUp/PopUp.jsx","hooks/useModals.js","hooks/requests.js","hooks/useTasks.js","components/common/Card/Card.jsx","routes/ViewTask/ViewTask.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"./popup.scss\";\r\n\r\nconst PopUp = ({open, close, children, image}) => {\r\n\r\n  return (\r\n    <Popup open={open} closeOnDocumentClick onClose={close}>\r\n      {/* {console.log(open)} */}\r\n      <div className=\"modal\">\r\n        <a className=\"close\" onClick={close}>\r\n          &times;\r\n        </a>\r\n        <div className=\"popup-container\" >\r\n          <div className=\"popup-image-container\">\r\n            <img src={image} className=\"popup-image\"/>\r\n          </div>\r\n          <div className=\"popup-caption\">{children}</div>\r\n        </div>\r\n      </div>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default PopUp;","import {useState} from 'react'\r\n\r\nconst useModals = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [content, setContent] = useState({image: \"\", message: \"\"});\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const modalContent = (image, message) => {\r\n    setIsOpen(true);\r\n    setContent({image, message});\r\n  }\r\n\r\n  return {\r\n    closeModal, isOpen, modalContent, content\r\n  }\r\n}\r\n\r\nexport default useModals","import axios from \"axios\";\r\nconst API_URL = `${window.location.hostname}:${window.location.port}/api/v1`;\r\n\r\nconst httpGetTasks = async () => {\r\n  return await axios.get(`${API_URL}/tasks`);\r\n};\r\n\r\nconst httpCreateTask = async (task) => {\r\n  return await axios.post(`${API_URL}/tasks`, task);\r\n};\r\n\r\nconst httpDeleteTask = async (taskID) => {\r\n  return await axios.delete(`${API_URL}/tasks/${taskID}`);\r\n};\r\n\r\nconst httpGetTask = async (taskID) => {\r\n  return await axios.get(`${API_URL}/tasks/${taskID}`);\r\n};\r\n\r\nconst httpUpdateTask = async (taskID, updatedTask) => {\r\n  return await axios.patch(`${API_URL}/tasks/${taskID}`, updatedTask);\r\n};\r\n\r\nexport {\r\n  httpGetTasks,\r\n  httpCreateTask,\r\n  httpDeleteTask,\r\n  httpUpdateTask,\r\n  httpGetTask,\r\n};\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  httpGetTasks,\r\n  httpCreateTask,\r\n  httpDeleteTask,\r\n  httpUpdateTask,\r\n  httpGetTask,\r\n} from \"./requests\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst useTasks = ({modalContent}) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState({});\r\n  const id = searchParams.get(\"id\");\r\n\r\n  // GET tasks\r\n  const getTasks = useCallback(async() => {\r\n    try {\r\n      const resp = await httpGetTasks();\r\n      setTasks(\r\n        resp.data.sort((a, b) => {\r\n          return (\r\n            Number(new Date(b.dateCreated).getTime()) -\r\n            Number(new Date(a.dateCreated).getTime())\r\n          );\r\n        })\r\n      )\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\",err.response.data.error)\r\n    }\r\n  }, []);\r\n\r\n  // GET task\r\n  const getTask = useCallback(async (taskId) => {\r\n    if(taskId!==null) {\r\n      try {\r\n        const resp = await httpGetTask(taskId);\r\n        setTask(resp.data);\r\n        return task;\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // DELETE task\r\n  const deleteTask = useCallback(async(taskId) => {\r\n    try {\r\n      const resp = await httpDeleteTask(taskId);\r\n      await getTasks();\r\n      modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n    }\r\n  },[getTasks, modalContent]);\r\n\r\n  // POST task\r\n  const createTask = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      // * task, desc, dll namanya harus sama dengan schema db\r\n      const data = new FormData(e.target);\r\n      const task = data.get(\"task\");\r\n      const desc = data.get(\"description\");\r\n      const dueDate = new Date(data.get(\"due-date\"));\r\n      const priority = data.get(\"priority\");\r\n      const dateCreated = new Date().toLocaleString();\r\n\r\n      const dataObj = { task, desc, dueDate, priority, dateCreated };\r\n\r\n      try {\r\n        const resp = await httpCreateTask(dataObj);\r\n        await getTasks();\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n        e.target.reset();\r\n\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },[getTasks, modalContent]\r\n  );\r\n\r\n  // PATCH task\r\n  const updateTask = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      // * task, desc, dll namanya harus sama dengan schema db\r\n      const data = new FormData(e.target);\r\n      const task = data.get(\"task\");\r\n      const desc = data.get(\"description\");\r\n      const dueDate = new Date(data.get(\"due-date\"));\r\n      const priority = data.get(\"priority\");\r\n      const dateCreated = new Date().toLocaleString();\r\n\r\n      const updatedTask = { task, desc, dueDate, priority, dateCreated };\r\n\r\n      try {\r\n        const resp = await httpUpdateTask(id, updatedTask);\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },[modalContent, id]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, [getTasks]);\r\n\r\n  useEffect(() => {\r\n    getTask(id);\r\n  }, [getTask, id]);\r\n\r\n  return {\r\n    createTask,\r\n    updateTask,\r\n    deleteTask,\r\n    tasks,\r\n    task,\r\n  };\r\n};\r\n\r\nexport default useTasks;\r\n","import React from 'react'\r\nimport \"./card.scss\"\r\nimport { BsCalendar2Week, BsClock } from \"react-icons/bs\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { MdDeleteOutline } from \"react-icons/md\";\r\nimport moment from \"moment\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Card = ({task, deleteTask, image}) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"card-left\">\r\n        <img src={image} alt=\"pattern\" />\r\n        <div\r\n          className={`card-priority card-priority-${task.priority} card-priority-left`}\r\n        ></div>\r\n      </div>\r\n      <div className=\"card-right\">\r\n        <div\r\n          className={`card-priority card-priority-${task.priority} card-priority-right`}\r\n        ></div>\r\n        <div className=\"card-right-container\">\r\n          <div className=\"card-caption-container\">\r\n            <h1 className=\"card-title\">{task.task}</h1>\r\n            <div className=\"card-desc\">{task.desc}</div>\r\n            <div className=\"card-due-date\">\r\n              <div className=\"card-due-date-item\">\r\n                <BsCalendar2Week className=\"card-due-date-icon\" />\r\n                <span>{moment(task.dueDate).format(\"dddd, DD MMMM YYYY\")}</span>\r\n              </div>\r\n              <div className=\"card-due-date-item\">\r\n                <BsClock className=\"card-due-date-icon\" />\r\n                <span>{moment(task.dueDate).format(\"h:mm A\")}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-edit-delete\">\r\n            <Link to={`/update?id=${task._id}`}>\r\n              <BiEdit className=\"card-edit-delete-icon\" />\r\n            </Link>\r\n            <div>\r\n              <MdDeleteOutline\r\n                className=\"card-edit-delete-icon\"\r\n                onClick={deleteTask}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport \"./viewtask.scss\";\r\nimport { IoChevronBackCircleSharp } from \"react-icons/io5\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Card from \"../../components/common/Card/Card\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport PopUp from \"../../components/common/PopUp/PopUp\";\r\nimport axios from \"axios\";\r\nimport useModals from \"../../hooks/useModals\";\r\n\r\nconst ViewTask = () => {\r\n  const { isOpen, closeModal, modalContent, content } = useModals();\r\n  const {deleteTask, updateTask, task} = useTasks({modalContent});\r\n  const [image, setImage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleCardDelete = () => {\r\n    deleteTask(task._id)\r\n  }\r\n\r\n  const fetchImage = async() => {\r\n    const page = Math.floor(Math.random() * (2 + 1));\r\n    const query = \"japan\";\r\n    const result = Math.floor(Math.random() * (10 + 1));\r\n\r\n    await axios.get(\r\n      `https://api.unsplash.com/search/photos?page=${page}&query=${query}&client_id=5NQBKN3TzC7F_U7hH5wLnSfv5cHfuE7AWCTJIsByOcE`\r\n    ).then(resp => setImage(resp.data.results[result].urls.regular))\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchImage();\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"viewtask-section\">\r\n      <div className=\"viewtask-container\">\r\n        <div className=\"viewtask-back-btn\" onClick={() => navigate(-1)}>\r\n          <IoChevronBackCircleSharp className=\"viewtask-back-btn-icon\" />\r\n          <span>Back</span>\r\n        </div>\r\n\r\n        <Card task={task} deleteTask={handleCardDelete} updateTask={() => updateTask(task._id)} className=\"viewtask-card\" image={image}/>\r\n\r\n        <PopUp open={isOpen} close={closeModal} image={content.image}>\r\n          {content.message}\r\n        </PopUp>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ViewTask"],"names":["open","close","children","image","closeOnDocumentClick","onClose","className","onClick","src","useState","isOpen","setIsOpen","message","content","setContent","closeModal","modalContent","API_URL","window","location","hostname","port","httpGetTasks","axios","httpCreateTask","task","httpDeleteTask","taskID","httpGetTask","httpUpdateTask","updatedTask","useSearchParams","searchParams","tasks","setTasks","setTask","id","get","getTasks","useCallback","resp","data","sort","a","b","Number","Date","dateCreated","getTime","response","error","getTask","taskId","deleteTask","msg","createTask","e","preventDefault","FormData","target","desc","dueDate","priority","toLocaleString","dataObj","reset","updateTask","useEffect","alt","moment","format","to","_id","useModals","useTasks","setImage","navigate","useNavigate","fetchImage","page","Math","floor","random","result","then","results","urls","regular","PopUp"],"sourceRoot":""}