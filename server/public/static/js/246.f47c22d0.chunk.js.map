{"version":3,"file":"static/js/246.f47c22d0.chunk.js","mappings":"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","sources":["components/common/Button/Button.jsx","components/Form/Form.jsx","components/common/PopUp/PopUp.jsx","hooks/useModals.js","hooks/requests.js","hooks/useTasks.js","routes/UpdateTask/UpdateTask.jsx"],"sourcesContent":["import React from 'react'\r\nimport \"./button.scss\";\r\n\r\nconst Button = ({variant, type, height, width, children}) => {\r\n  return (\r\n    <button type={type || \"button\"} className={`button button-${variant}`} style={{height: height, width: width || \"100%\"}}>\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\nimport \"./form.scss\";\r\nimport Button from \"../common/Button/Button\";\r\nimport moment from \"moment\";\r\n\r\nconst Form = ({ mode, createTask, updateTask, task, className }) => {\r\n  if (mode === \"create\") {\r\n    return (\r\n      <div className={`${className} form`}>\r\n        <form className=\"form-container\" method=\"post\" onSubmit={createTask}>\r\n          <h1 className=\"form-title\">New Task</h1>\r\n          <div className=\"form-fields\">\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"task\">Task</label>\r\n              <input type=\"text\" name=\"task\" id=\"task\" required />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"description\">Desc</label>\r\n              <textarea name=\"description\" id=\"description\" />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"due-date\">Due Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                name=\"due-date\"\r\n                id=\"due-date\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"priority\">Priority</label>\r\n              <select\r\n                id=\"priority\"\r\n                defaultValue={\"high\"}\r\n                name=\"priority\"\r\n                required\r\n              >\r\n                <option value=\"high\">High</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"low\">Low</option>\r\n              </select>\r\n            </div>\r\n            <Button variant=\"primary\" type=\"submit\" height=\"30px\">\r\n              Create Task\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  } else if (mode === \"update\") {\r\n    return (\r\n      <div className={`${className} form`}>\r\n        <form className=\"form-container\" method=\"post\" onSubmit={updateTask}>\r\n          <h1 className=\"form-title\">Update Task</h1>\r\n          <div className=\"form-fields\">\r\n            <div className=\"form-field\">\r\n              <label>Task ID</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"taskid\"\r\n                defaultValue={task._id}\r\n                disabled\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"task\">Task</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"task\"\r\n                id=\"task\"\r\n                defaultValue={task.task}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"description\">Desc</label>\r\n              <textarea\r\n                name=\"description\"\r\n                id=\"description\"\r\n                defaultValue={task.desc}\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"due-date\">Due Date</label>\r\n              <input\r\n                type=\"datetime-local\"\r\n                name=\"due-date\"\r\n                id=\"due-date\"\r\n                // defaultValue=\"2018-06-12T19:30\"\r\n                defaultValue={moment(task.dueDate).format(\"yyyy-MM-DDTHH:mm\")}\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"form-field\">\r\n              <label htmlFor=\"priority\">Priority</label>\r\n              <select\r\n                id=\"priority\"\r\n                defaultValue={task.priority}\r\n                name=\"priority\"\r\n                required\r\n              >\r\n                <option value=\"high\">High</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"low\">Low</option>\r\n              </select>\r\n            </div>\r\n            <Button variant=\"primary\" type=\"submit\" height=\"30px\">\r\n              Update Task\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"./popup.scss\";\r\n\r\nconst PopUp = ({open, close, children, image}) => {\r\n\r\n  return (\r\n    <Popup open={open} closeOnDocumentClick onClose={close}>\r\n      {/* {console.log(open)} */}\r\n      <div className=\"modal\">\r\n        <a className=\"close\" onClick={close}>\r\n          &times;\r\n        </a>\r\n        <div className=\"popup-container\" >\r\n          <div className=\"popup-image-container\">\r\n            <img src={image} className=\"popup-image\"/>\r\n          </div>\r\n          <div className=\"popup-caption\">{children}</div>\r\n        </div>\r\n      </div>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default PopUp;","import {useState} from 'react'\r\n\r\nconst useModals = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [content, setContent] = useState({image: \"\", message: \"\"});\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const modalContent = (image, message) => {\r\n    setIsOpen(true);\r\n    setContent({image, message});\r\n  }\r\n\r\n  return {\r\n    closeModal, isOpen, modalContent, content\r\n  }\r\n}\r\n\r\nexport default useModals","import axios from \"axios\";\r\n// const API_URL = \"https://taskr-tasktracker.herokuapp.com/api/v1\" || \"http://localhost:5000/api/v1\";\r\nconst API_URL = \"http://localhost:5000/api/v1\";\r\n\r\nconst httpGetTasks = async () => {\r\n  return await axios.get(`${API_URL}/tasks`);\r\n};\r\n\r\nconst httpCreateTask = async (task) => {\r\n  return await axios.post(`${API_URL}/tasks`, task);\r\n};\r\n\r\nconst httpDeleteTask = async (taskID) => {\r\n  return await axios.delete(`${API_URL}/tasks/${taskID}`);\r\n};\r\n\r\nconst httpGetTask = async (taskID) => {\r\n  return await axios.get(`${API_URL}/tasks/${taskID}`);\r\n};\r\n\r\nconst httpUpdateTask = async (taskID, updatedTask) => {\r\n  return await axios.patch(`${API_URL}/tasks/${taskID}`, updatedTask);\r\n};\r\n\r\nexport {\r\n  httpGetTasks,\r\n  httpCreateTask,\r\n  httpDeleteTask,\r\n  httpUpdateTask,\r\n  httpGetTask,\r\n};\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  httpGetTasks,\r\n  httpCreateTask,\r\n  httpDeleteTask,\r\n  httpUpdateTask,\r\n  httpGetTask,\r\n} from \"./requests\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst useTasks = ({modalContent}) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [task, setTask] = useState({});\r\n  const id = searchParams.get(\"id\");\r\n\r\n  // GET tasks\r\n  const getTasks = useCallback(async() => {\r\n    try {\r\n      const resp = await httpGetTasks();\r\n      setTasks(\r\n        resp.data.sort((a, b) => {\r\n          return (\r\n            Number(new Date(b.dateCreated).getTime()) -\r\n            Number(new Date(a.dateCreated).getTime())\r\n          );\r\n        })\r\n      )\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\",err.response.data.error)\r\n    }\r\n  }, []);\r\n\r\n  // GET task\r\n  const getTask = useCallback(async (taskId) => {\r\n    if(taskId!==null) {\r\n      try {\r\n        const resp = await httpGetTask(taskId);\r\n        setTask(resp.data);\r\n        return task;\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // DELETE task\r\n  const deleteTask = useCallback(async(taskId) => {\r\n    try {\r\n      const resp = await httpDeleteTask(taskId);\r\n      await getTasks();\r\n      modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n    }\r\n  },[getTasks, modalContent]);\r\n\r\n  // POST task\r\n  const createTask = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      // * task, desc, dll namanya harus sama dengan schema db\r\n      const data = new FormData(e.target);\r\n      const task = data.get(\"task\");\r\n      const desc = data.get(\"description\");\r\n      const dueDate = new Date(data.get(\"due-date\"));\r\n      const priority = data.get(\"priority\");\r\n      const dateCreated = new Date().toLocaleString();\r\n\r\n      const dataObj = { task, desc, dueDate, priority, dateCreated };\r\n\r\n      try {\r\n        const resp = await httpCreateTask(dataObj);\r\n        await getTasks();\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n        e.target.reset();\r\n\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },[getTasks, modalContent]\r\n  );\r\n\r\n  // PATCH task\r\n  const updateTask = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      // * task, desc, dll namanya harus sama dengan schema db\r\n      const data = new FormData(e.target);\r\n      const task = data.get(\"task\");\r\n      const desc = data.get(\"description\");\r\n      const dueDate = new Date(data.get(\"due-date\"));\r\n      const priority = data.get(\"priority\");\r\n      const dateCreated = new Date().toLocaleString();\r\n\r\n      const updatedTask = { task, desc, dueDate, priority, dateCreated };\r\n\r\n      try {\r\n        const resp = await httpUpdateTask(id, updatedTask);\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },[modalContent, id]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n  }, [getTasks]);\r\n\r\n  useEffect(() => {\r\n    getTask(id);\r\n  }, [getTask, id]);\r\n\r\n  return {\r\n    createTask,\r\n    updateTask,\r\n    deleteTask,\r\n    tasks,\r\n    task,\r\n  };\r\n};\r\n\r\nexport default useTasks;\r\n","import React from \"react\";\r\nimport \"./updatetask.scss\";\r\nimport Form from \"../../components/Form/Form\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport { IoChevronBackCircleSharp } from \"react-icons/io5\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PopUp from \"../../components/common/PopUp/PopUp\";\r\nimport useModals from \"../../hooks/useModals\";\r\n\r\nconst UpdateTask = () => {\r\n  const { isOpen, closeModal, modalContent, content } = useModals();\r\n\r\n  const { task, updateTask} = useTasks({modalContent});\r\n  const navigate = useNavigate();\r\n  return (\r\n    <section className=\"updatetask-section\">\r\n      <div className=\"updatetask-container\">\r\n        <div className=\"updatetask-back-container\" onClick={() => navigate(-1)}>\r\n          <IoChevronBackCircleSharp className=\"updatetask-back-icon\" />\r\n          <span>Back</span>\r\n        </div>\r\n\r\n        <Form mode=\"update\" task={task} updateTask={updateTask} className=\"updatetask-form\"/>\r\n\r\n        <PopUp open={isOpen} close={closeModal} image={content.image}>\r\n          {content.message}\r\n        </PopUp>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default UpdateTask;\r\n"],"names":["variant","type","height","width","children","className","style","mode","createTask","updateTask","task","method","onSubmit","htmlFor","name","id","required","defaultValue","value","_id","disabled","desc","moment","dueDate","format","priority","open","close","image","closeOnDocumentClick","onClose","onClick","src","useState","isOpen","setIsOpen","message","content","setContent","closeModal","modalContent","API_URL","httpGetTasks","axios","httpCreateTask","httpDeleteTask","taskID","httpGetTask","httpUpdateTask","updatedTask","useSearchParams","searchParams","tasks","setTasks","setTask","get","getTasks","useCallback","resp","data","sort","a","b","Number","Date","dateCreated","getTime","response","error","getTask","taskId","deleteTask","msg","e","preventDefault","FormData","target","toLocaleString","dataObj","reset","useEffect","useModals","useTasks","navigate","useNavigate","Form","PopUp"],"sourceRoot":""}