{"version":3,"file":"static/js/405.42f2a5f2.chunk.js","mappings":"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","sources":["components/common/Task/Task.jsx","components/Tasks/Tasks.jsx","components/common/Navbar/Navbar.jsx","components/common/PopUp/PopUp.jsx","hooks/useModals.js","hooks/requests.js","hooks/useTasks.js"],"sourcesContent":["import React from \"react\";\r\nimport { GoPrimitiveDot } from \"react-icons/go\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { FiArchive } from \"react-icons/fi\";\r\nimport { IoRefreshOutline } from \"react-icons/io5\";\r\nimport { RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport \"./task.scss\";\r\n\r\nconst Task = ({ task, id, description, dueDate, priority, dateArchived, deleteTask, archiveTask, restoreTask }) => {\r\n\r\n  const formatDate = (d) => {\r\n    const date = new Date(d);\r\n    const now = new Date();\r\n    if (moment(date).format(\"l\") !== moment(now).format(\"l\")) {\r\n      return moment(date).format(\"llll\");\r\n    }\r\n    return moment(date).format(\"[Today, ]lll\");\r\n  };\r\n\r\n  return (\r\n    <Link className=\"task\" to={`/view?id=${id}`}>\r\n      <div className=\"task-container\">\r\n        <div className=\"task-priority\">\r\n          <GoPrimitiveDot className={`priority-dot priority-dot-${priority}`} />\r\n        </div>\r\n        <div className=\"task-name-due\">\r\n          <div className=\"task-name\">{task}</div>\r\n          <div className=\"task-due\">{formatDate(dueDate)}</div>\r\n        </div>\r\n        <div className=\"task-update-archive\">\r\n          {dateArchived ? (\r\n            <>\r\n              <Link to={{}} onClick={restoreTask}>\r\n                <IoRefreshOutline className=\"task-btn task-update-btn\" />\r\n              </Link>\r\n              <Link to={{}} onClick={deleteTask}>\r\n                <RiDeleteBinLine className=\"task-btn task-archive-btn\" />\r\n              </Link>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Link to={`/update?id=${id}`}>\r\n                <BiEdit className=\"task-btn task-update-btn\" />\r\n              </Link>\r\n              <Link to={{}} onClick={archiveTask}>\r\n                <FiArchive className=\"task-btn task-archive-btn\" />\r\n              </Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"../common/Task/Task\";\r\nimport \"./tasks.scss\";\r\n\r\nconst Tasks = ({archiveTask, updateTask, tasks, className, deleteTask, message, restoreTask}) => {\r\n  return (\r\n    <div className={`${className} tasks`}>\r\n      {tasks.length === 0 && (\r\n        <div className=\"tasks-message\">\r\n          {\r\n            message || \"No tasks currently ╮(＾▽＾)╭ \"\r\n          }\r\n        </div>\r\n      )}\r\n      {tasks.length > 0 && (\r\n        <div className=\"tasks-container\">\r\n          <div className=\"tasks-inner-container\">\r\n            {\r\n              tasks.map((task) => {\r\n                const date = new Date(task.dueDate);\r\n                return (\r\n                  <Task\r\n                    //property\r\n                    key={task._id}\r\n                    id={task._id}\r\n                    task={task.task}\r\n                    description={task.desc}\r\n                    dueDate={date.toLocaleString()}\r\n                    priority={task.priority}\r\n                    dateArchived={task.dateArchived}\r\n                    \r\n                    //method\r\n                    archiveTask={() => archiveTask(task._id)}\r\n                    updateTask = {() => updateTask(task._id)}\r\n                    deleteTask = {() => deleteTask(task._id)}\r\n                    restoreTask = {() => restoreTask(task._id)}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from 'react'\r\nimport \"./navbar.scss\";\r\nimport { AiOutlinePlus, AiFillCalendar, AiFillSetting } from \"react-icons/ai\";\r\nimport {FaClipboardList} from \"react-icons/fa\";\r\nimport { RiArchiveDrawerFill } from \"react-icons/ri\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <Link to=\"/\" className=\"navbar-add-btn\">\r\n        <AiOutlinePlus className=\"navbar-add-icon\" />\r\n      </Link>\r\n      <div className=\"navbar-btns\">\r\n        <ul className=\"navbar-top-btn\">\r\n          <Link to=\"/lists\">\r\n            <FaClipboardList className=\"navbar-icon\" />\r\n          </Link>\r\n          <Link to=\"/calendar\">\r\n            <AiFillCalendar className=\"navbar-icon\" />\r\n          </Link>\r\n        </ul>\r\n        <ul className=\"navbar-bottom-btn\">\r\n          <Link to=\"/archived\" >\r\n            <RiArchiveDrawerFill className=\"navbar-icon\" />\r\n          </Link>\r\n          <li>\r\n            <AiFillSetting className=\"navbar-icon\" />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar","import React from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"./popup.scss\";\r\n\r\nconst PopUp = ({open, close, children, image}) => {\r\n\r\n  return (\r\n    <Popup open={open} closeOnDocumentClick onClose={close}>\r\n      {/* {console.log(open)} */}\r\n      <div className=\"modal\">\r\n        <a className=\"close\" onClick={close}>\r\n          &times;\r\n        </a>\r\n        <div className=\"popup-container\" >\r\n          <div className=\"popup-image-container\">\r\n            <img src={image} className=\"popup-image\"/>\r\n          </div>\r\n          <div className=\"popup-caption\">{children}</div>\r\n        </div>\r\n      </div>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default PopUp;","import {useState} from 'react'\r\n\r\nconst useModals = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [content, setContent] = useState({image: \"\", message: \"\"});\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const modalContent = (image, message) => {\r\n    setIsOpen(true);\r\n    setContent({image, message});\r\n  }\r\n\r\n  return {\r\n    closeModal, isOpen, modalContent, content\r\n  }\r\n}\r\n\r\nexport default useModals","import axios from \"axios\";\r\n// require(\"dotenv\").config();\r\n// const API_URL = \"https://taskr-tasktracker.herokuapp.com/api/v1\" || \"http://localhost:5000/api/v1\";\r\nconst API_URL = \"https://taskr-tasktracker.herokuapp.com/api/v1\";\r\n\r\nconst httpGetTasks = async () => {\r\n  return await axios.get(`${API_URL}/tasks`);\r\n};\r\n\r\nconst httpGetArchivedTasks = async () => {\r\n  return await axios.get(`${API_URL}/tasks/archived`);\r\n};\r\n\r\nconst httpClearArchivedTasks = async () => {\r\n  return await axios.delete(`${API_URL}/tasks/archived`);\r\n}\r\n\r\nconst httpRestoreTask = async(taskId) => {\r\n  return await axios.patch(`${API_URL}/tasks/archived/${taskId}`);\r\n}\r\n\r\nconst httpCreateTask = async (task) => {\r\n  return await axios.post(`${API_URL}/tasks`, task);\r\n};\r\n\r\nconst httpDeleteTask = async (taskID) => {\r\n  return await axios.delete(`${API_URL}/tasks/archived/${taskID}`);\r\n};\r\n\r\nconst httpGetTask = async (taskID) => {\r\n  return await axios.get(`${API_URL}/tasks/${taskID}`);\r\n};\r\n\r\nconst httpUpdateTask = async (taskID, updatedTask) => {\r\n  return await axios.patch(`${API_URL}/tasks/${taskID}`, updatedTask);\r\n};\r\n\r\nexport {\r\n  httpGetTasks,\r\n  httpCreateTask,\r\n  httpDeleteTask,\r\n  httpUpdateTask,\r\n  httpGetTask,\r\n  httpGetArchivedTasks,\r\n  httpClearArchivedTasks,\r\n  httpRestoreTask,\r\n};\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  httpGetTasks,\r\n  httpCreateTask,\r\n  httpDeleteTask,\r\n  httpUpdateTask,\r\n  httpGetTask,\r\n  httpGetArchivedTasks,\r\n  httpClearArchivedTasks,\r\n  httpRestoreTask\r\n} from \"./requests\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst useTasks = ({modalContent}) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [archivedTasks, setArchivedTasks] = useState([]);\r\n  const [task, setTask] = useState({});\r\n  const id = searchParams.get(\"id\");\r\n\r\n  // GET tasks\r\n  const getTasks = useCallback(async () => {\r\n    try {\r\n      const resp = await httpGetTasks();\r\n      setTasks(\r\n        resp.data.sort((a, b) => {\r\n          return (\r\n            Number(new Date(b.dateCreated).getTime()) -\r\n            Number(new Date(a.dateCreated).getTime())\r\n          );\r\n        })\r\n      );\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n    }\r\n  }, []);\r\n\r\n  // GET archived tasks\r\n  const getArchivedTasks = useCallback(async () => {\r\n    try {\r\n      const resp = await httpGetArchivedTasks();\r\n      setArchivedTasks(\r\n        resp.data.sort((a, b) => {\r\n          return (\r\n            Number(new Date(b.dateCreated).getTime()) -\r\n            Number(new Date(a.dateCreated).getTime())\r\n          );\r\n        })\r\n      );\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n    }\r\n  }, []);\r\n\r\n  // DELETE archived tasks\r\n  const clearArchivedTasks = useCallback(async() => {\r\n    try {\r\n      const resp = await httpClearArchivedTasks();\r\n      getArchivedTasks();\r\n      modalContent(\"/assets/man-success.png\", resp.data.msg);\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n    }\r\n  }, [modalContent, getArchivedTasks]);\r\n\r\n  const restoreArchivedTask = useCallback(async(taskId) => {\r\n    try {\r\n      const resp = await httpRestoreTask(taskId);\r\n      getArchivedTasks();\r\n      modalContent(\"/assets/man-success.png\", resp.data.msg);\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n    }\r\n  }, [modalContent, getArchivedTasks]);\r\n\r\n  // GET task\r\n  const getTask = useCallback(async (taskId) => {\r\n    if (taskId !== null) {\r\n      try {\r\n        const resp = await httpGetTask(taskId);\r\n        setTask(resp.data);\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // DELETE task\r\n  const deleteTask = useCallback(\r\n    async (taskId) => {\r\n      try {\r\n        const resp = await httpDeleteTask(taskId);\r\n        await getArchivedTasks();\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },\r\n    [getTasks, modalContent]\r\n  );\r\n\r\n  // POST task\r\n  const createTask = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      // * task, desc, dll namanya harus sama dengan schema db\r\n      const data = new FormData(e.target);\r\n      const task = data.get(\"task\");\r\n      const desc = data.get(\"description\");\r\n      const dueDate = new Date(data.get(\"due-date\"));\r\n      const priority = data.get(\"priority\");\r\n      const dateCreated = new Date().toLocaleString();\r\n\r\n      const dataObj = { task, desc, dueDate, priority, dateCreated };\r\n\r\n      try {\r\n        const resp = await httpCreateTask(dataObj);\r\n        await getTasks();\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n        e.target.reset();\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },\r\n    [getTasks, modalContent]\r\n  );\r\n\r\n  // PATCH task\r\n  const updateTask = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      // * task, desc, dll namanya harus sama dengan schema db\r\n      const data = new FormData(e.target);\r\n      const task = data.get(\"task\");\r\n      const desc = data.get(\"description\");\r\n      const dueDate = new Date(data.get(\"due-date\"));\r\n      const priority = data.get(\"priority\");\r\n      const dateCreated = new Date().toLocaleString();\r\n\r\n      const updatedTask = { task, desc, dueDate, priority, dateCreated };\r\n\r\n      try {\r\n        const resp = await httpUpdateTask(id, updatedTask);\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },\r\n    [modalContent, id]\r\n  );\r\n\r\n  const archiveTask = useCallback(\r\n    async (taskId) => {\r\n      const dateArchived = new Date();\r\n      try {\r\n        const resp = await httpUpdateTask(taskId, { dateArchived });\r\n        await getTasks();\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },\r\n    [modalContent, getTasks]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n    getArchivedTasks();\r\n  }, [getTasks, getArchivedTasks]);\r\n\r\n  useEffect(() => {\r\n    getTask(id);\r\n  }, [getTask, id]);\r\n\r\n  return {\r\n    createTask,\r\n    updateTask,\r\n    deleteTask,\r\n    archiveTask,\r\n    tasks,\r\n    task,\r\n    archivedTasks,\r\n    clearArchivedTasks,\r\n    restoreArchivedTask\r\n  };\r\n};\r\n\r\nexport default useTasks;\r\n"],"names":["task","id","dueDate","description","priority","dateArchived","deleteTask","archiveTask","restoreTask","className","to","d","date","Date","now","moment","format","formatDate","onClick","updateTask","tasks","message","length","map","_id","desc","toLocaleString","open","close","children","image","closeOnDocumentClick","onClose","src","useState","isOpen","setIsOpen","content","setContent","closeModal","modalContent","API_URL","httpGetTasks","axios","httpGetArchivedTasks","httpClearArchivedTasks","httpRestoreTask","taskId","httpCreateTask","httpDeleteTask","taskID","httpGetTask","httpUpdateTask","updatedTask","useSearchParams","searchParams","setTasks","archivedTasks","setArchivedTasks","setTask","get","getTasks","useCallback","resp","data","sort","a","b","Number","dateCreated","getTime","response","error","getArchivedTasks","clearArchivedTasks","msg","restoreArchivedTask","getTask","createTask","e","preventDefault","FormData","target","dataObj","reset","useEffect"],"sourceRoot":""}