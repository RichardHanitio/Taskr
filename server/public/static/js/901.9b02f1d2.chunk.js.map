{"version":3,"file":"static/js/901.9b02f1d2.chunk.js","mappings":"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","sources":["components/common/PopUp/PopUp.jsx","hooks/useModals.js","hooks/requests.js","hooks/useTasks.js","components/common/Card/Card.jsx","routes/ViewTask/ViewTask.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"./popup.scss\";\r\n\r\nconst PopUp = ({open, close, children, image}) => {\r\n\r\n  return (\r\n    <Popup open={open} closeOnDocumentClick onClose={close}>\r\n      {/* {console.log(open)} */}\r\n      <div className=\"modal\">\r\n        <a className=\"close\" onClick={close}>\r\n          &times;\r\n        </a>\r\n        <div className=\"popup-container\" >\r\n          <div className=\"popup-image-container\">\r\n            <img src={image} className=\"popup-image\"/>\r\n          </div>\r\n          <div className=\"popup-caption\">{children}</div>\r\n        </div>\r\n      </div>\r\n    </Popup>\r\n  );\r\n};\r\n\r\nexport default PopUp;","import {useState} from 'react'\r\n\r\nconst useModals = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [content, setContent] = useState({image: \"\", message: \"\"});\r\n\r\n  const closeModal = () => {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  const modalContent = (image, message) => {\r\n    setIsOpen(true);\r\n    setContent({image, message});\r\n  }\r\n\r\n  return {\r\n    closeModal, isOpen, modalContent, content\r\n  }\r\n}\r\n\r\nexport default useModals","import axios from \"axios\";\r\n// require(\"dotenv\").config();\r\n// const API_URL = \"https://taskr-tasktracker.herokuapp.com/api/v1\" || \"http://localhost:5000/api/v1\";\r\nconst API_URL = \"https://taskr-tasktracker.herokuapp.com/api/v1\";\r\n\r\nconst httpGetTasks = async () => {\r\n  return await axios.get(`${API_URL}/tasks`);\r\n};\r\n\r\nconst httpGetArchivedTasks = async () => {\r\n  return await axios.get(`${API_URL}/tasks/archived`);\r\n};\r\n\r\nconst httpClearArchivedTasks = async () => {\r\n  return await axios.delete(`${API_URL}/tasks/archived`);\r\n}\r\n\r\nconst httpRestoreTask = async(taskId) => {\r\n  return await axios.patch(`${API_URL}/tasks/archived/${taskId}`);\r\n}\r\n\r\nconst httpCreateTask = async (task) => {\r\n  return await axios.post(`${API_URL}/tasks`, task);\r\n};\r\n\r\nconst httpDeleteTask = async (taskID) => {\r\n  return await axios.delete(`${API_URL}/tasks/archived/${taskID}`);\r\n};\r\n\r\nconst httpGetTask = async (taskID) => {\r\n  return await axios.get(`${API_URL}/tasks/${taskID}`);\r\n};\r\n\r\nconst httpUpdateTask = async (taskID, updatedTask) => {\r\n  return await axios.patch(`${API_URL}/tasks/${taskID}`, updatedTask);\r\n};\r\n\r\nexport {\r\n  httpGetTasks,\r\n  httpCreateTask,\r\n  httpDeleteTask,\r\n  httpUpdateTask,\r\n  httpGetTask,\r\n  httpGetArchivedTasks,\r\n  httpClearArchivedTasks,\r\n  httpRestoreTask,\r\n};\r\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport {\r\n  httpGetTasks,\r\n  httpCreateTask,\r\n  httpDeleteTask,\r\n  httpUpdateTask,\r\n  httpGetTask,\r\n  httpGetArchivedTasks,\r\n  httpClearArchivedTasks,\r\n  httpRestoreTask,\r\n} from \"./requests\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\n\r\nconst useTasks = ({modalContent}) => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [archivedTasks, setArchivedTasks] = useState([]);\r\n  const [task, setTask] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const id = searchParams.get(\"id\");\r\n\r\n  // GET tasks\r\n  const getTasks = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const resp = await httpGetTasks();\r\n      setTasks(\r\n        resp.data.sort((a, b) => {\r\n          return (\r\n            Number(new Date(b.dateCreated).getTime()) -\r\n            Number(new Date(a.dateCreated).getTime())\r\n          );\r\n        })\r\n      );\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n    }\r\n  }, []);\r\n\r\n  // GET archived tasks\r\n  const getArchivedTasks = useCallback(async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const resp = await httpGetArchivedTasks();\r\n      setArchivedTasks(\r\n        resp.data.sort((a, b) => {\r\n          return (\r\n            Number(new Date(b.dateCreated).getTime()) -\r\n            Number(new Date(a.dateCreated).getTime())\r\n          );\r\n        })\r\n      );\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n    }\r\n  }, []);\r\n\r\n  // DELETE archived tasks\r\n  const clearArchivedTasks = useCallback(async() => {\r\n    try {\r\n      const resp = await httpClearArchivedTasks();\r\n      getArchivedTasks();\r\n      modalContent(\"/assets/man-success.png\", resp.data.msg);\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n    }\r\n  }, [modalContent, getArchivedTasks]);\r\n\r\n  const restoreArchivedTask = useCallback(async(taskId) => {\r\n    try {\r\n      const resp = await httpRestoreTask(taskId);\r\n      getArchivedTasks();\r\n      modalContent(\"/assets/man-success.png\", resp.data.msg);\r\n    } catch (err) {\r\n      modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n    }\r\n  }, [modalContent, getArchivedTasks]);\r\n\r\n  // GET task\r\n  const getTask = useCallback(async (taskId) => {\r\n    if (taskId !== null) {\r\n      try {\r\n        const resp = await httpGetTask(taskId);\r\n        setTask(resp.data);\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // DELETE task\r\n  const deleteTask = useCallback(\r\n    async (taskId) => {\r\n      try {\r\n        const resp = await httpDeleteTask(taskId);\r\n        await getArchivedTasks();\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },\r\n    [getTasks, modalContent]\r\n  );\r\n\r\n  // POST task\r\n  const createTask = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      // * task, desc, dll namanya harus sama dengan schema db\r\n      const data = new FormData(e.target);\r\n      const task = data.get(\"task\");\r\n      const desc = data.get(\"description\");\r\n      const dueDate = new Date(data.get(\"due-date\"));\r\n      const priority = data.get(\"priority\");\r\n      const dateCreated = new Date().toLocaleString();\r\n\r\n      const dataObj = { task, desc, dueDate, priority, dateCreated };\r\n\r\n      try {\r\n        const resp = await httpCreateTask(dataObj);\r\n        await getTasks();\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n        e.target.reset();\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },\r\n    [getTasks, modalContent]\r\n  );\r\n\r\n  // PATCH task\r\n  const updateTask = useCallback(\r\n    async (e) => {\r\n      e.preventDefault();\r\n      // * task, desc, dll namanya harus sama dengan schema db\r\n      const data = new FormData(e.target);\r\n      const task = data.get(\"task\");\r\n      const desc = data.get(\"description\");\r\n      const dueDate = new Date(data.get(\"due-date\"));\r\n      const priority = data.get(\"priority\");\r\n      const dateCreated = new Date().toLocaleString();\r\n\r\n      const updatedTask = { task, desc, dueDate, priority, dateCreated };\r\n\r\n      try {\r\n        const resp = await httpUpdateTask(id, updatedTask);\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },\r\n    [modalContent, id]\r\n  );\r\n\r\n  const archiveTask = useCallback(\r\n    async (taskId) => {\r\n      const dateArchived = new Date();\r\n      try {\r\n        const resp = await httpUpdateTask(taskId, { dateArchived });\r\n        await getTasks();\r\n        modalContent(\"/assets/man-success.jpg\", resp.data.msg);\r\n      } catch (err) {\r\n        modalContent(\"/assets/man-stress.png\", err.response.data.error);\r\n      }\r\n    },\r\n    [modalContent, getTasks]\r\n  );\r\n\r\n  useEffect(() => {\r\n    getTasks();\r\n    getArchivedTasks();\r\n  }, [getTasks, getArchivedTasks]);\r\n\r\n  useEffect(() => {\r\n    getTask(id);\r\n  }, [getTask, id]);\r\n\r\n  return {\r\n    createTask,\r\n    updateTask,\r\n    deleteTask,\r\n    archiveTask,\r\n    tasks,\r\n    task,\r\n    archivedTasks,\r\n    clearArchivedTasks,\r\n    restoreArchivedTask,\r\n    isLoading\r\n  };\r\n};\r\n\r\nexport default useTasks;\r\n","import React from 'react'\r\nimport \"./card.scss\"\r\nimport { BsCalendar2Week, BsClock } from \"react-icons/bs\";\r\nimport { BiEdit } from \"react-icons/bi\";\r\nimport { MdDeleteOutline } from \"react-icons/md\";\r\nimport moment from \"moment\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Card = ({task, deleteTask, image}) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"card-left\">\r\n        <img src={image} alt=\"pattern\" />\r\n        <div\r\n          className={`card-priority card-priority-${task.priority} card-priority-left`}\r\n        ></div>\r\n      </div>\r\n      <div className=\"card-right\">\r\n        <div\r\n          className={`card-priority card-priority-${task.priority} card-priority-right`}\r\n        ></div>\r\n        <div className=\"card-right-container\">\r\n          <div className=\"card-caption-container\">\r\n            <h1 className=\"card-title\">{task.task}</h1>\r\n            <div className=\"card-desc\">{task.desc}</div>\r\n            <div className=\"card-due-date\">\r\n              <div className=\"card-due-date-item\">\r\n                <BsCalendar2Week className=\"card-due-date-icon\" />\r\n                <span>{moment(task.dueDate).format(\"dddd, DD MMMM YYYY\")}</span>\r\n              </div>\r\n              <div className=\"card-due-date-item\">\r\n                <BsClock className=\"card-due-date-icon\" />\r\n                <span>{moment(task.dueDate).format(\"h:mm A\")}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-edit-delete\">\r\n            <Link to={`/update?id=${task._id}`}>\r\n              <BiEdit className=\"card-edit-delete-icon\" />\r\n            </Link>\r\n            <div>\r\n              <MdDeleteOutline\r\n                className=\"card-edit-delete-icon\"\r\n                onClick={deleteTask}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card\r\n\r\n\r\n","import React, {useState, useEffect} from 'react'\r\nimport \"./viewtask.scss\";\r\nimport { IoChevronBackCircleSharp } from \"react-icons/io5\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Card from \"../../components/common/Card/Card\";\r\nimport useTasks from \"../../hooks/useTasks\";\r\nimport PopUp from \"../../components/common/PopUp/PopUp\";\r\nimport axios from \"axios\";\r\nimport useModals from \"../../hooks/useModals\";\r\n\r\nconst ViewTask = () => {\r\n  const { isOpen, closeModal, modalContent, content } = useModals();\r\n  const {deleteTask, updateTask, task} = useTasks({modalContent});\r\n  const [image, setImage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleCardDelete = () => {\r\n    deleteTask(task._id)\r\n  }\r\n\r\n  const fetchImage = async() => {\r\n    const page = Math.floor(Math.random() * (2 + 1));\r\n    const query = \"japan\";\r\n    const result = Math.floor(Math.random() * (10 + 1));\r\n\r\n    await axios.get(\r\n      `https://api.unsplash.com/search/photos?page=${page}&query=${query}&client_id=5NQBKN3TzC7F_U7hH5wLnSfv5cHfuE7AWCTJIsByOcE`\r\n    ).then(resp => setImage(resp.data.results[result].urls.regular))\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchImage();\r\n  }, [])\r\n\r\n  return (\r\n    <section className=\"viewtask-section\">\r\n      <div className=\"viewtask-container\">\r\n        <div className=\"viewtask-back-btn\" onClick={() => navigate(-1)}>\r\n          <IoChevronBackCircleSharp className=\"viewtask-back-btn-icon\" />\r\n          <span>Back</span>\r\n        </div>\r\n\r\n        <Card task={task} deleteTask={handleCardDelete} updateTask={() => updateTask(task._id)} className=\"viewtask-card\" image={image}/>\r\n\r\n        <PopUp open={isOpen} close={closeModal} image={content.image}>\r\n          {content.message}\r\n        </PopUp>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ViewTask"],"names":["open","close","children","image","closeOnDocumentClick","onClose","className","onClick","src","useState","isOpen","setIsOpen","message","content","setContent","closeModal","modalContent","API_URL","httpGetTasks","axios","httpGetArchivedTasks","httpClearArchivedTasks","httpRestoreTask","taskId","httpCreateTask","task","httpDeleteTask","taskID","httpGetTask","httpUpdateTask","updatedTask","useSearchParams","searchParams","tasks","setTasks","archivedTasks","setArchivedTasks","setTask","isLoading","setIsLoading","id","get","getTasks","useCallback","resp","data","sort","a","b","Number","Date","dateCreated","getTime","response","error","getArchivedTasks","clearArchivedTasks","msg","restoreArchivedTask","getTask","deleteTask","createTask","e","preventDefault","FormData","target","desc","dueDate","priority","toLocaleString","dataObj","reset","updateTask","archiveTask","dateArchived","useEffect","alt","moment","format","to","_id","useModals","useTasks","setImage","navigate","useNavigate","fetchImage","page","Math","floor","random","result","then","results","urls","regular","PopUp"],"sourceRoot":""}