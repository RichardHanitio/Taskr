{"version":3,"file":"static/js/24.91932997.chunk.js","mappings":"mKAkBA,EAde,SAAC,GAAsE,IAApEA,EAAmE,EAAnEA,QAASC,EAA0D,EAA1DA,KAAMC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,MAAOC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,UAChEC,GAAWC,EAAAA,EAAAA,MACf,OACE,mBACER,KAAMA,GAAQ,SACdM,UAAS,wBAAmBP,EAAnB,YAA8BO,GACvCG,MAAO,CAAER,OAAQA,EAAQC,MAAOA,GAAS,QACzCQ,QAASL,EAAM,kBAAIE,EAASF,EAAb,EAAqBD,EAJtC,SAMGD,GAGN,C,oHCoBD,EA5Be,WACb,OACE,iBAAKG,UAAU,mBAAf,WACE,SAAC,KAAD,CAAMK,GAAG,IAAIL,UAAU,iBAAvB,UACE,SAAC,MAAD,CAAeA,UAAU,uBAE3B,iBAAKA,UAAU,cAAf,WACE,gBAAIA,UAAU,iBAAd,WACE,SAAC,KAAD,CAAMK,GAAG,SAAT,UACE,SAAC,MAAD,CAAiBL,UAAU,mBAE7B,SAAC,KAAD,CAAMK,GAAG,YAAT,UACE,SAAC,MAAD,CAAgBL,UAAU,sBAG9B,gBAAIA,UAAU,oBAAd,WACE,SAAC,KAAD,CAAMK,GAAG,YAAT,UACE,SAAC,MAAD,CAAqBL,UAAU,mBAEjC,yBACE,SAAC,MAAD,CAAeA,UAAU,0BAMpC,C,kICyDD,EApFiB,WACf,OAAwBM,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WAcLC,MAAM,2CAA4C,CAChDC,OAAQ,MACRC,YAAa,UACbC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,oCAAoC,KAGrCC,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,OAAgB,OAAOD,EAASE,OAC7C,MAAM,IAAIC,MAAM,kCACjB,IACAJ,MAAK,SAACK,GACLZ,EAAQY,EAAUb,KAAKc,OAAO,GAAGC,MAClC,IACAC,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACb,GAGP,GAAE,IAUH,OAAIjB,GAwBA,qBAASP,UAAU,mBAAnB,WACE,SAAC2B,EAAA,EAAD,KACA,mBACEC,IAAG,yDAAoDrB,EAAKsB,QAAQ,IAAK,OAAtE,uBACHC,MAAM,aACN9B,UAAU,wBA3Bd,qBAASA,UAAU,mBAAnB,WACE,SAAC2B,EAAA,EAAD,KACA,iBAAK3B,UAAU,mBAAf,WACE,gBAAKA,UAAU,0BAAf,6EAGA,UAAC+B,EAAA,EAAD,CACEtC,QAAQ,YACRC,KAAK,SACLC,OAAO,OACPC,MAAM,MACNI,UAAU,cACVF,KAtBgB,WAExBkC,OAAOC,KAAK,oCAAqC,QAIlD,EAUO,WAQE,SAAC,MAAD,CAAUjC,UAAU,yBARtB,iDA0BT,C","sources":["components/common/Button/Button.jsx","components/common/Navbar/Navbar.jsx","routes/Calendar/Calendar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./button.scss\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Button = ({ variant, type, height, width, children, func, link, className}) => {\r\n  let navigate = useNavigate();\r\n  return (\r\n    <button\r\n      type={type || \"button\"}\r\n      className={`button button-${variant} ${className}`}\r\n      style={{ height: height, width: width || \"100%\" }}\r\n      onClick={link? ()=>navigate(link) : func}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react'\r\nimport \"./navbar.scss\";\r\nimport { AiOutlinePlus, AiFillCalendar, AiFillSetting } from \"react-icons/ai\";\r\nimport {FaClipboardList} from \"react-icons/fa\";\r\nimport { RiArchiveDrawerFill } from \"react-icons/ri\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar-container\">\r\n      <Link to=\"/\" className=\"navbar-add-btn\">\r\n        <AiOutlinePlus className=\"navbar-add-icon\" />\r\n      </Link>\r\n      <div className=\"navbar-btns\">\r\n        <ul className=\"navbar-top-btn\">\r\n          <Link to=\"/lists\">\r\n            <FaClipboardList className=\"navbar-icon\" />\r\n          </Link>\r\n          <Link to=\"/calendar\">\r\n            <AiFillCalendar className=\"navbar-icon\" />\r\n          </Link>\r\n        </ul>\r\n        <ul className=\"navbar-bottom-btn\">\r\n          <Link to=\"/archived\" >\r\n            <RiArchiveDrawerFill className=\"navbar-icon\" />\r\n          </Link>\r\n          <li>\r\n            <AiFillSetting className=\"navbar-icon\" />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport \"./calendar.scss\";\r\nimport Navbar from \"../../components/common/Navbar/Navbar\"\r\nimport Button from \"../../components/common/Button/Button\"\r\nimport {FcGoogle} from \"react-icons/fc\";\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst Calendar = () => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // const fetchUser = async () => {\r\n    //   await axios.get(\r\n    //     \"http://localhost:5000/auth/login/success\"\r\n    //   ).then(resp => {\r\n        // if(resp.status===200) return resp.json();\r\n    //     console.log(resp);\r\n    //     }\r\n    //   ).then(resObj => {\r\n    //     setUser(resObj.user)\r\n    //   })\r\n    // };\r\n    // fetchUser();\r\n     const getUser = () => {\r\n       fetch(\"http://localhost:5000/auth/login/success\", {\r\n         method: \"GET\",\r\n         credentials: \"include\",\r\n         headers: {\r\n           Accept: \"application/json\",\r\n           \"Content-Type\": \"application/json\",\r\n           \"Access-Control-Allow-Credentials\": true,\r\n         },\r\n       })\r\n         .then((response) => {\r\n           if (response.status === 200) return response.json();\r\n           throw new Error(\"authentication has been failed!\");\r\n         })\r\n         .then((resObject) => {\r\n           setUser(resObject.user.emails[0].value);\r\n         })\r\n         .catch((err) => {\r\n           console.log(err);\r\n         });\r\n     };\r\n     getUser();\r\n  }, [])\r\n\r\n  const handleGoogleLogin = () => {\r\n    // * for development purposes only\r\n    window.open(\"http://localhost:5000/auth/google\", \"_self\");\r\n\r\n    // * for deployment purposes only\r\n    // window.open(\"https://taskr-tasktracker.herokuapp.com/auth/google\", \"_self\");\r\n  }\r\n  \r\n  if(!user) {\r\n    return (\r\n      <section className=\"calendar-section\">\r\n        <Navbar />\r\n        <div className=\"calendar-sign-in\">\r\n          <div className=\"calendar-sign-in-prompt\">\r\n            To connect your tasks to Google Calendar, you need to sign in.\r\n          </div>\r\n          <Button\r\n            variant=\"secondary\"\r\n            type=\"button\"\r\n            height=\"40px\"\r\n            width=\"50%\"\r\n            className=\"sign-in-btn\"\r\n            func={handleGoogleLogin}\r\n          >\r\n            <FcGoogle className=\"calendar-google-logo\" />\r\n            Sign In and Connect to Google Calendar\r\n          </Button>\r\n        </div>\r\n      </section>\r\n    );\r\n  } else {\r\n    return (\r\n      <section className=\"calendar-section\">\r\n        <Navbar />\r\n        <iframe\r\n          src={`https://calendar.google.com/calendar/embed?src=${user.replace('@', \"%40\")}&ctz=Asia%2FJakarta`}\r\n          title=\"myCalendar\"\r\n          className=\"calendar-iframe\"\r\n        ></iframe>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar"],"names":["variant","type","height","width","children","func","link","className","navigate","useNavigate","style","onClick","to","useState","user","setUser","useEffect","fetch","method","credentials","headers","Accept","then","response","status","json","Error","resObject","emails","value","catch","err","console","log","Navbar","src","replace","title","Button","window","open"],"sourceRoot":""}